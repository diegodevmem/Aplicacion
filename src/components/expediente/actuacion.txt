<template>
  <div class="content-wrapper" v-loading="loading">
    <section class="content-header">
      <h1 class="label bg-primary">
        Actuaciones del expediente {{ numero_expediente }}
        <small style="color: white">Sistema de Expedientes</small>
      </h1>
    </section>
    <br />
    <section class="content" v-loading="loading">
      <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
          <ol class="label breadcrumb bg-gray pull-right">
            <router-link tag="li" to="/exp_default" exact>
              <i class="fa fa-home"></i> Home
            </router-link>
            <router-link tag="li" to="/" exact>
              <i class="fa fa-dashboard"></i> Dashboard
            </router-link>
            <router-link tag="li" to="/exp_expediente" exact>
              <i class="fa fa-circle-o"></i> Expedientes
            </router-link>
            <li><i class="fa fa-bug active"></i> Actuación</li>
          </ol>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-12">
          <div class="box box-primary">
            <div class="box-header with-border">
              <h1 class="box-title">
                <i class="fa fa-list"></i> Información ingresada en el sistema.
              </h1>
              <div class="box-tools" style="width: 25%">
                <form class="form-horizontal">
                  <div class="input-group input-group-sm">
                    <input
                      type="text"
                      name="table_search"
                      class="form-control pull-right"
                      placeholder="Search"
                      v-model="search"
                      @input="search = $event.target.value.toUpperCase()"
                    />
                    <div class="input-group-btn">
                      <button type="submit" class="btn btn-default">
                        <i class="fa fa-search"></i>
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            </div>

            <tabla_mis_expedientes
            :actuacion="true" :fields="fields" :search="search" :expediente_id="expediente_id"
            :numero_expediente="numero_expediente" :tipo_tramite="tipo_tramite"
            ></tabla_mis_expedientes>

          </div>
        </div>
      </div>
    </section>
  </div>
</template>

<script>
import moment from "moment";
import mis_expediente from "./mis_expediente";
import tabla_mis_expedientes from './mis_expedientes/tabla_mis_exp/tabla_mis_expedientes';
export default {
  name: "ActuacionExp",
  components: {
    moment,
    tabla_mis_expedientes,
    mis_expediente
  },
  data() {
    return {
      loading: false,
      fields: [
        { key: "codigo_barra", label: "Código del Expediente", sortable: true },
        { key: "tipo_tramite", label: "Trámite", sortable: true },
        {
          key: "nombre_expediente",
          label: "Nombre del Expediente",
          sortable: true,
        },
        { key: "razon_social", label: "Razon Social", sortable: true },
        { key: "folio_actual", label: "Cantidad de Folios", sortable: true },
        {
          key: "folio_inicial",
          label: "Cantidad de Folios Inicial",
          sortable: true,
        },
        { key: "fecha_ingreso", label: "Fecha de Ingreso", sortable: true },
        { key: "usuario", label: "¿Quién creo el Expediente?", sortable: true },
        { key: "estado", label: "Estado Actual", sortable: false },
        { key: "opcion", label: "Acciones" },
      ],
      search: "",
      expediente_id: 0,
      numero_expediente: "",
      tipo_tramite: "",
      tabla_mis_expedientes,
    };
  },
  created() {
    let self = this;
    self.expediente_id = atob(self.$route.params.expediente_id);
    self.numero_expediente = atob(
      self.$route.params.numero_expediente
    ).toUpperCase();
    self.tipo_tramite = atob(self.$route.params.tipo_tramite);
    // self.buscar_requisitos(self.barcode)
    self.getPromise();
  },
  // computed: {
  //   total_folios() {
  //     this.forms.requisitos.forEach((element) => {
  //       this.forms.folio_inicial += element.cantidad_folio;
  //     });
  //     return this.forms.folio_inicial;
  //   },
  //   title() {
  //     let message = "";
  //     message = this.actuacion_selected
  //       ? "Opciones de la Actuación " + this.actuacion_selected.codigo_barra
  //       : "";
  //     return message;
  //   },
  //   titleDocumento() {
  //     let message = "";
  //     message = this.actuacion_selected
  //       ? "Documentos de la Actuación " + this.actuacion_selected.codigo_barra
  //       : "";
  //     return message;
  //   },
  //   limitar() {
  //     return this.$store.state.roles.some(
  //       (item) => item.rol.nombre.toLowerCase() === "administrador"
  //     );
  //   },
  //   titleEditar() {
  //     let message = "";
  //     message = this.actuacion_selected
  //       ? "Información disponible para actualizar en la actuación " +
  //         this.actuacion_selected.codigo_barra
  //       : "";
  //     return message;
  //   },
  // },
  // methods: {

  //   descongelar(barcode){
  //     let self = this;
  //     self.loading = true;
  //     let data = {
  //       barcode: null,
  //     };
  //     data.barcode = barcode;
  //     self.$store.state.services.congelacionNuevoService
  //       .update(data)
  //       .then((r) => {
  //         let text = r.data === 1 ? "Se a descongelado el expediente exitosamente" : "A ocurrido un error al intentar descongelar el expediente"
  //         self.loading = false;
  //         this.getAll();
  //         r.data === 1 ? this.$toastr.success(text) : this.$toastr.error(text);
  //         console.log('r.data');
  //         console.log(r.data);
  //       })
  //       .catch((r) => {
  //         this.$toastr.error("A ocurrido un error al obtener el expediente congelado");
  //       });
  //   },

  //   cleanCongelacion(){
  //     this.congelacion.razon = '';
  //     this.congelacion.agregar = false;
  //     this.congelacion.tipo = null;
  //   },

  //   tipos(){
  //     let self = this;
  //     self.loading = true;
  //     console.log(self.congelacion.razon);
  //     self.$store.state.services.congelacionNuevoService
  //       .getAll()
  //       .then((r) => {
  //         this.tipoCongelaciones = r.data[1];
  //         this.razonCongelaciones = r.data[0];
  //         self.loading = false;
  //       })
  //       .catch((r) => {});
  //   },

  //   congelar(item){
  //     this.barcode = item.codigo_barra
  //     let self = this;
  //     self.loading = true;

  //     self.tipos();
  //     self.congelacion.codigo_barra = self.barcode;

  //     self.styleObjectCongelar.display = "block";
  //     self.abrirModalCongelar = "modal fade in";
  //     self.modalCongelar = true;
  //     self.loading = false;

  //   },

  //   getPromise() {
  //     this.loading = true;
  //     Promise.all([
  //       this.getAll(),
  //       this.getMunicipio(),
  //       this.getRepresentacion(),
  //     ])
  //       .then(() => {
  //         this.loading = false;
  //       })
  //       .catch((error) => {
  //         this.loading = false;
  //         this.$toastr.error("Ocurrió un error: " + error, "Error");
  //       });
  //   },

  //   guardarCongelacion(){
  //     let self = this;
  //     self.loading = true;
  //     self.$store.state.services.congelacionNuevoService
  //       .create(self.congelacion)
  //       .then((r) => {
  //         self.loading = false;
  //         let text = r.data === 1 ? "Se a congelado el expediente exitosamente" : "A ocurrido un error al intentar congelar el expediente"
  //         // self.items = r.data;
  //         // self.totalRows = self.items.length;
  //         this.getAll();
  //         this.cancel_showCongelar();
  //         self.congelacion.razon = '',
  //         self.congelacion.agregar = false;
  //         self.congelacion.tipo = null;
  //         r.data === 1 ? this.$toastr.success(text) : this.$toastr.error(text);
  //       })
  //       .catch((r) => {
  //         this.$toastr.error("A ocurrido un error al obtener el expediente");
  //       });
  //   },

  //   updateRequisitos(){
  //     let self = this;
  //     self.loading = true;
  //     self.$store.state.services.requisitospendientesService
  //       .update(this.forms)
  //       .then((r) => {
  //         self.loading = false;
  //         if (r.data === "1") {
  //           this.$toastr.success("Requisitos actualizados exitosamente", "Mensaje");
  //         } else {
  //           this.$toastr.error("A ocurrido un error al intentar actualizar el requisito", "Mensaje");
  //         }
  //         // this.clearReq();
  //         this.forms.barcode= "";
  //         this.forms.folio_correcion =0;
  //         this.forms.expediente =null;
  //         this.forms.requisitos = [];
  //         this.pendiente = [];
  //         this.cargado = [];
  //         this.requisitos = [];

  //         self.styleObjectRequisitos.display = "";
  //         self.abrirModalRequisitos = "modal fade";
  //         self.modalRequisitos = false;
  //       }).catch((r) => {});

  //   },

  //   clearReq(){
  //     this.forms.barcode= "";
  //     this.forms.expediente =null;
  //     while(A.length > 0) {
  //       A.pop();
  //     }
  //   },

  //   onFileChange(e, item) {
  //     this.forms.requisitos.forEach((element) => {
  //       if (element.tramite_requisito_id == item.id) {
  //         this.forms.requisitos.splice(this.forms.requisitos.indexOf(element), 1);
  //         return;
  //       }
  //     });
  //     let files = e.target.files || e.dataTransfer.files;
  //     if (!files.length) {
  //       return;
  //     } else {
  //       this.validarDocumento(files[0], item);
  //     }
  //   },

  //   validarDocumento(file, item) {
  //     let self = this;
  //     self.loading = true;
  //     let reader = new FileReader();
  //     let tamanio = file.size;
  //     // let formato = item.formato.toLowerCase();
  //     let equivalente = parseFloat(tamanio / 1024);
  //     console.log(equivalente, tamanio);
  //     let extension = file.name
  //       .substring(file.name.lastIndexOf("."));
  //       //.toLowerCase();
  //     this.numPages = 0;

  //     // if (
  //     //   formato.substring(formato.lastIndexOf(".")) !== extension.toLowerCase()
  //     // ) {
  //     //   self.$swal("El formato del documeto debe de ser " + formato);
  //     //   self.loading = false;
  //     // } else {
  //       // if (equivalente < parseInt(item.megas) * 1024) {
  //         reader.onload = (e) => {
  //           this.src = pdf.createLoadingTask(e.target.result);
  //           this.src.promise.then((pdf) => {
  //             this.numPages = pdf.numPages;
  //             item.folio = this.numPages;
  //             let objeto = new Object();
  //             objeto.cantidad_folio = this.numPages;
  //             objeto.nombre = file.name;
  //             objeto.path = e.target.result;
  //             objeto.tramite_requisito_id = item.tramite_requisito_id;
  //             objeto.size = equivalente;
  //             // objeto.requisito_id = item.requisito_id;
  //             objeto.requisito_id = item.id;
  //             objeto.formato_documento_id = item.formato_documento_id;
  //             this.forms.folio_inicial =0;
  //             self.forms.requisitos.push(objeto);

  //             self.$swal({
  //               position: "top-end",
  //               type: "success",
  //               title: "Documento agregado correctamente",
  //               showConfirmButton: false,
  //               timer: 1500,
  //             });
  //             self.loading = false;
  //           });
  //         };

  //         reader.readAsDataURL(file);
  //       // } else {
  //       //   self.$swal(
  //       //     "El el tamaño del documento debe de tener menos de " +
  //       //       item.megas +
  //       //       " MB y el documento tiene " +
  //       //       equivalente +
  //       //       " MB"
  //       //   );
  //       //   self.loading = false;
  //       // }
  //     // }
  //   },

  //   onFiltered(filteredItems) {
  //     this.totalRows = filteredItems.length;
  //     this.currentPage = 1;
  //   },

  //   getAll() {
  //     let self = this;
  //     self.loading = true;

  //     self.$store.state.services.actuacionService
  //       .get(self.expediente_id)
  //       .then((r) => {
  //         self.loading = false;
  //         self.items = r.data;
  //         self.totalRows = self.items.length;
  //       })
  //       .catch((r) => {});
  //   },

  //   //funcion para eliminar registro
  //   destroy(data) {
  //     let self = this;
  //     let title = !data.deleted_at ? "Desactivar" : "Activar";
  //     let type = !data.deleted_at ? "error" : "success";
  //     self
  //       .$swal({
  //         title: title,
  //         text: "¿Está seguro de realizar esta acción?",
  //         type: type,
  //         showCancelButton: true,
  //       })
  //       .then((result) => {
  //         if (result.value) {
  //           self.loading = true;
  //           self.$store.state.services.actuacionService
  //             .destroy(data)
  //             .then((r) => {
  //               self.loading = false;

  //               if (r.response) return;

  //               this.$toastr.success(r.data, "Mensaje");
  //               self.getAll();
  //             })
  //             .catch((r) => {
  //               console.log(r);
  //             });
  //         }
  //       });
  //   },

  //   showOptions(item) {
  //     let self = this;
  //     if (!item.completo) {
  //       self.botones_siguiente = [];
  //       self.botones_atras = [];
  //       if (item[0]) {
  //         self.loading = true;
  //         self.actuacion_selected = item[0];
  //         self.$refs.selectableTable.clearSelected();
  //         self.$store.state.services.unidadtramiteService
  //           .getBotones(item[0].tipo_tramite_id, item[0].id)
  //           .then((r) => {
  //             self.loading = false;

  //             if (r.response) return;

  //             if (r.data.finalizado) {
  //               this.$toastr.warning(r.data.message_s.toUpperCase(), "Mensaje");
  //               return;
  //             }

  //             if (r.data.message_s) {
  //               this.$toastr.warning(r.data.message_s.toUpperCase(), "Mensaje");
  //             }

  //             if (r.data.message_a) {
  //               this.$toastr.warning(r.data.message_a.toUpperCase(), "Mensaje");
  //             }

  //             self.botones_siguiente = r.data.siguiente;
  //             self.botones_atras = r.data.atras;
  //             self.styleObject.display = "block";
  //             self.abrirModal = "modal fade in";
  //             self.modal = true;
  //           })
  //           .catch((r) => {});
  //       }
  //     }
  //   },

  //   cancel_show() {
  //     let self = this;
  //     this.actuacion_selected = null;
  //     self.styleObject.display = "";
  //     self.abrirModal = "modal fade";
  //     self.modal = false;
  //     this.$refs.selectableTable.clearSelected();
  //   },

  //   cancel_showCongelar() {
  //     let self = this;
  //     this.actuacion_selected = null;
  //     self.styleObjectCongelar.display = "";
  //     self.abrirModalCongelar = "modal fade";
  //     self.modalCongelar = false;
  //     this.$refs.selectableTable.clearSelected();
  //   },

  //   buscar_documento(item) {
  //     let self = this;
  //     self.loading = true;
  //     self.documento_seleccionado = null;
  //     self.actuacion_selected = item;
  //     self.documentos.push({ id: 0, nombre: "Caratula" });
  //     self.$store.state.services.actuacionService
  //       .getDocument(item.id)
  //       .then((r) => {
  //         self.documentos = r.data;
  //         self.documentos.push({ id: 0, nombre: "Caratula" });
  //         self.styleObjectDocumento.display = "block";
  //         self.abrirModalDocumento = "modal fade in";
  //         self.modalDocumento = true;
  //         self.loading = false;
  //       })
  //       .catch((r) => {});
  //   },

  //   cancel_showDocumento() {
  //     let self = this;
  //     self.actuacion_selected = null;
  //     self.styleObjectDocumento.display = "";
  //     self.abrirModalDocumento = "modal fade";
  //     self.modalDocumento = false;
  //   },

  //   verDocumento(item) {
  //     this.show = false;
  //     this.src = "";
  //     if (item) {
  //       let self = this;
  //       self.loading = true;
  //       if (item.id > 0) {
  //         self.$store.state.services.documentoactuacionService
  //           .get(item.path)
  //           .then((r) => {
  //             this.show = true;
  //             this.src = r.data;
  //             self.loading = false;
  //           })
  //           .catch((r) => {});
  //       } else {
  //         self.$store.state.services.caratulaexpedienteService
  //           .getCaratulaActuacion(self.actuacion_selected.id)
  //           .then((r) => {
  //             this.show = true;
  //             this.src = r.data;
  //             self.loading = false;
  //           })
  //           .catch((r) => {});
  //       }
  //     }
  //   },

  //   crear(id) {
  //     let self = this;
  //     let url =
  //       "/crear/actuacion/" +
  //       btoa(self.numero_expediente) +
  //       "/" +
  //       btoa(self.tipo_tramite) +
  //       "/actuacion/" +
  //       btoa(id);
  //     self.$router.push({ path: url });
  //   },

  //   seguimiento(item) {
  //     let self = this;
  //     let url =
  //       "/exp_seguimiento/" +
  //       btoa(self.tipo_tramite) +
  //       "/" +
  //       btoa(self.numero_expediente.toLowerCase()) +
  //       "/" +
  //       btoa(item.codigo_barra) +
  //       "/" +
  //       btoa(item.id) +
  //       "/" +
  //       btoa(self.expediente_id);
  //     self.$router.push({ path: url });
  //   },

  //   seguimiento_siguiente(item) {
  //     let self = this;
  //     let url =
  //       "/exp_seguimiento_siguiente/" +
  //       btoa(item.nombre) + //nombre del paso
  //       "/" +
  //       btoa(item.unidad) + //nombre de la unidad
  //       "/" +
  //       btoa(item.siguiente_paso) + //número de paso
  //       "/" +
  //       btoa(item.codigo_barra) + //código de actuación
  //       "/" +
  //       btoa(item.actuacion_id) + //id de la actuación
  //       "/" +
  //       btoa(item.id) + //id del paso al que va
  //       "/" +
  //       btoa(self.tipo_tramite) + //tipo de trámite
  //       "/" +
  //       btoa(self.numero_expediente.toLowerCase()) + //número de expediente
  //       "/" +
  //       btoa(self.expediente_id) + //id del expediente
  //       "/" +
  //       btoa(item.adjuntar); //necesitar adjuntar documento

  //     self.$router.push({ path: url });
  //   },

  //   seguimiento_atras(item) {
  //     let self = this;
  //     let url =
  //       "/exp_seguimiento_atras/" +
  //       btoa(item.nombre) + //nombre del paso
  //       "/" +
  //       btoa(item.unidad) + //nombre de la unidad
  //       "/" +
  //       btoa(item.atras_paso) + //número de paso
  //       "/" +
  //       btoa(item.codigo_barra) + //código de actuación
  //       "/" +
  //       btoa(item.actuacion_id) + //id de la actuación
  //       "/" +
  //       btoa(item.id) + //id del paso al que va
  //       "/" +
  //       btoa(self.tipo_tramite) + //tipo de trámite
  //       "/" +
  //       btoa(self.numero_expediente.toLowerCase()) + //número de expediente
  //       "/" +
  //       btoa(self.expediente_id) + //id del expediente
  //       "/" +
  //       btoa(item.adjuntar); //necesitar adjuntar documento

  //     self.$router.push({ path: url });
  //   },

  //   agregarRequisitos(item){
  //     let self = this;
  //     self.loading = true;
  //     this.barcode = item.codigo_barra
  //     self.$store.state.services.requisitospendientesService
  //       .get(this.barcode)
  //       .then((r) => {
  //         self.loading = false;
  //         self.pendiente = r.data.pendiente;
  //         self.cargado = r.data.cargado

  //         let temp =0;
  //         for (let i = 0; i < self.pendiente.length; i++) {
  //           for (let j = 0; j < self.cargado.length; j++) {
  //             if(self.pendiente[i].id === self.cargado[j].requisito_id){
  //               temp = 1;
  //             }
  //           }if (temp===0) {
  //             self.requisitos.push(self.pendiente[i]);
  //           } else {
  //             temp = 0;
  //           }
  //         }

  //         self.forms.barcode = self.barcode;
  //         self.forms.expediente = r.data.expediente;

  //         self.totalRows = self.requisitos.length;
  //         self.styleObjectRequisitos.display = "block";
  //         self.abrirModalRequisitos = "modal fade in";
  //         self.modalRequisitos = true;
  //         self.loading = false;
  //      }).catch((r) => {});
  //   },

  //   editarA(item) {
  //     let self = this;
  //     self.loading = true;
  //     self.form.representantes = [];
  //     self.$store.state.services.representanteactuacionService
  //       .getAll(item.id)
  //       .then((r) => {
  //         if (item.tipo_razon_social == "PERSONA INDIVIDUAL") {
  //           r.data.data.forEach((element) => {
  //             self.representante.nit = element.razon_social.dpi;
  //             self.representante.razon_social = element.razon_social.razon_social;

  //             element.razon_social.telefonos.forEach((x) => {
  //               self.representante.numero = x.numero;
  //               self.numero_representante = x.numero;
  //               self.representante.codigo_area = x.codigo_area;
  //               self.representante.pais = x.pais;
  //               self.representante.url = x.url;
  //             });
  //             element.razon_social.emails.forEach((x) => {
  //               self.representante.email = x.email;
  //             });
  //             element.razon_social.direcciones.forEach((x) => {
  //                 self.municipios.forEach((muni) => {
  //                   if (muni.id == x.municipio_id) {
  //                     self.representante.municipio_id = muni;
  //                   }
  //                 });
  //                 self.representante.nombre = x.nombre;
  //             });
  //             self.representante.representacion = element.representacion;
  //             self.ver_tags_representante = true;
  //           });
  //         } else {
  //           r.data.data.forEach((element) => {
  //             let objeto = new Object();
  //             objeto.nit = element.razon_social.dpi;
  //             objeto.razon_social = element.razon_social.razon_social;
  //             element.razon_social.telefonos.forEach((x) => {
  //               if (x.notificar) {
  //                 objeto.numero = x.numero;
  //                 objeto.codigo_area = x.codigo_area;
  //                 objeto.pais = x.pais;
  //                 objeto.url = x.url;
  //               }
  //             });
  //             element.razon_social.emails.forEach((x) => {
  //               if (x.notificar) {
  //                 objeto.email = x.email;
  //               }
  //             });
  //             element.razon_social.direcciones.forEach((x) => {
  //               if (x.notificar) {
  //                 objeto.completo = x.completo;
  //                 objeto.municipio_id = x.municipio;
  //                 objeto.nombre = x.nombre;
  //               }
  //             });
  //             objeto.representacion = element.representacion;
  //             self.form.representantes.push(objeto);
  //           });
  //         }

  //         self.form.fecha_ingreso = moment(
  //           item.fecha_ingreso,
  //           "YYYY-MM-DD"
  //         ).toDate();
  //         self.form.id = item.id;
  //         self.form.principal = item.principal;
  //         self.form.nombre_expediente = item.nombre_expediente;
  //         self.form.nit = item.nit;
  //         self.form.razon_social = item.razon_social;
  //         self.form.observacion = item.observacion;
  //         self.form.tipo_razon_social = item.tipo_razon_social;
  //         self.actuacion_selected = item;
  //         self.styleObjectEditar.display = "block";
  //         self.abrirModalEditar = "modal fade in";
  //         self.modalEditar = true;
  //         self.loading = false;
  //       })
  //       .catch((r) => {
  //         console.log(r);
  //       });
  //   },

  //   cancel_showRequisitos() {
  //     this.forms.barcode= "";
  //     this.forms.folio_correcion ="";
  //     this.forms.expediente =null;
  //     this.forms.requisitos = [];
  //     this.forms.folio_inicial = 0;
  //     this.pendiente = [];
  //     this.cargado = [];
  //     this.requisitos = [];
  //     let self = this;
  //     self.actuacion_selected = null;
  //     self.styleObjectRequisitos.display = "";
  //     self.abrirModalRequisitos = "modal fade";
  //     self.modalRequisitos = false;
  //   },

  //   cancel_showEditar() {
  //     let self = this;
  //     self.actuacion_selected = null;
  //     self.styleObjectEditar.display = "";
  //     self.abrirModalEditar = "modal fade";
  //     self.modalEditar = false;
  //   },

  //   quitarRepresentante(item) {
  //     this.form.representantes.splice(
  //       this.form.representantes.indexOf(item),
  //       1
  //     );
  //   },

  //   buscar_nit_representante(input) {
  //     let self = this;
  //     self.representante.nit = null;
  //     return new Promise((resolve) => {
  //       if (input.length < 3) {
  //         self.ver_tags_representante = false;
  //         return resolve([]);
  //       }
  //       self.$store.state.services.razonsocialService.get(input).then((r) => {
  //         self.ver_tags_representante = r.data.length > 0 ? false : true;
  //         self.representante.nit =
  //           r.data.length > 0 ? null : input.toUpperCase();
  //         resolve(r.data);
  //       });
  //     });
  //   },

  //   seleccionarNITR(result) {
  //     if (result) {
  //       this.representante.nit = result.dpi;
  //       this.representante.razon_social = result.razon_social;
  //       this.representante.numero = result.numero;
  //       this.numero_representante = result.numero;
  //       this.representante.codigo_area = result.codigo_area;
  //       this.representante.pais = result.pais;
  //       this.representante.url = result.url;
  //       this.representante.email = result.email;
  //       this.municipios.forEach((element) => {
  //         if (element.id == result.municipio_id) {
  //           this.representante.municipio_id = element;
  //         }
  //       });
  //       this.representante.nombre = result.nombre;
  //       this.ver_tags_representante = true;
  //     } else {
  //       this.clearR();
  //     }
  //   },

  //   clearR() {
  //     this.representante.nit = null;
  //     this.representante.razon_social = null;
  //     this.representante.numero = null;
  //     this.numero_representante = null;
  //     this.representante.codigo_area = null;
  //     this.representante.pais = null;
  //     this.representante.url = null;
  //     this.representante.notificar_telefono = true;
  //     this.representante.email = null;
  //     this.representante.notificar_email = true;
  //     this.representante.municipio_id = null;
  //     this.representante.nombre = null;
  //     this.representante.notificar_direccion = true;
  //     this.ver_tags_representante = false;
  //   },

  //   getResultValueR(result) {
  //     return result.nit;
  //   },

  //   validar_numero_representante(e) {
  //     if (e.isValid) {
  //       this.representante.numero = e.phoneNumber;
  //       this.representante.codigo_area = e.countryCallingCode;
  //       this.representante.pais = e.countryCode;
  //       this.representante.url = e.uri;
  //       this.esconder_representante = true;
  //     } else {
  //       this.representante.numero = e.phoneNumber;
  //       this.representante.codigo_area = e.countryCallingCode;
  //       this.representante.pais = e.countryCode;
  //       this.representante.url = e.uri;
  //       this.esconder_representante = false;
  //     }
  //   },

  //   getRepresentacion() {
  //     let self = this;
  //     self.representaciones = [];
  //     self.$store.state.services.representacionService
  //       .getAll()
  //       .then((r) => {
  //         self.representaciones = r.data.data;
  //       })
  //       .catch((r) => {});
  //   },

  //   getMunicipio() {
  //     let self = this;

  //     self.$store.state.services.municipioService
  //       .getAll()
  //       .then((r) => {
  //         self.municipios = r.data;
  //       })
  //       .catch((r) => {});
  //   },

  //   createOrEdit() {
  //     let self = this;
  //     self.$validator.validateAll().then((result) => {
  //       if(result) {
  //         if(self.form.tipo_razon_social == 'PERSONA INDIVIDUAL') {
  //           self.form.representantes.push(self.representante)
  //           self.form.principal ? self.updateExpediente(self.form) : self.updateActuacion(self.form);
  //         } else {
  //           self.form.representantes.length > 0
  //             ? self.form.principal
  //               ? self.updateExpediente()
  //               : self.updateActuacion()
  //             : this.$toastr.error(
  //                 "Es necesario ingresar al menos 1 " + form.tipo_razon_social,
  //                 "Mensaje"
  //               );
  //         }
  //       } else {
  //         this.$toastr.error("Verificar los datos", "Mensaje");
  //       }
  //     });
  //   },

  //   updateExpediente(data) {
  //     let self = this;
  //     self.loading = true;

  //     self.$store.state.services.expedienteService
  //       .update(data)
  //       .then((r) => {
  //         self.loading = false;

  //         if (r.response) return;

  //         this.$toastr.success(r.data, "Mensaje");
  //         self.getPromise();
  //         self.cancel_show();
  //         self.cancel_showDocumento();
  //         self.cancel_showEditar();
  //         self.clearDataR();
  //       })
  //       .catch((r) => {
  //         console.log(r);
  //       });
  //   },

  //   updateActuacion(data) {
  //     let self = this;
  //     self.loading = true;

  //     self.$store.state.services.actuacionService
  //       .update(data)
  //       .then((r) => {
  //         self.loading = false;

  //         if (r.response) return;

  //         this.$toastr.success(r.data, "Mensaje");
  //         self.getPromise();
  //         self.cancel_show();
  //         self.cancel_showDocumento();
  //         self.cancel_showEditar();
  //         self.clearDataR();
  //       })
  //       .catch((r) => {
  //         console.log(r);
  //       });
  //   },

  //   agregarRepresentante(scope) {
  //     let self = this;
  //     self.$validator.validateAll(scope).then((result) => {
  //       if (result) {
  //         let objeto = new Object();
  //         objeto.nit = self.representante.nit;
  //         objeto.razon_social = self.representante.razon_social;
  //         objeto.numero = self.representante.numero;
  //         objeto.codigo_area = self.representante.codigo_area;
  //         objeto.pais = self.representante.pais;
  //         objeto.url = self.representante.url;
  //         objeto.notificar_telefono = self.representante.notificar_telefono;
  //         objeto.email = self.representante.email;
  //         objeto.municipio_id = self.representante.municipio_id;
  //         objeto.nombre = self.representante.nombre;
  //         objeto.notificar_direccion = self.representante.notificar_direccion;
  //         objeto.notificar_email = self.representante.notificar_email;
  //         objeto.completo =
  //           self.representante.municipio_id.nombre +
  //           ", " +
  //           self.representante.nombre;

  //         if (this.form.tipo_razon_social.nombre == "COOPROPIETARIO") {
  //           objeto.representacion = { id: 1, nombre: "PROPIETARIO" };
  //         } else {
  //           objeto.representacion = self.representante.representacion;
  //         }

  //         self.form.representantes.push(objeto);
  //         self.clearDataR();
  //       } else {
  //         this.$toastr.error(
  //           "Verificar los datos del representante",
  //           "Mensaje"
  //         );
  //       }
  //     });
  //   },

  //   //limpiar data de formulario
  //   clearDataR() {
  //     let self = this;

  //     Object.keys(self.representante).forEach(function (key, index) {
  //       if (typeof self.representante[key] === "string")
  //         self.representante[key] = "";
  //       else if (typeof self.representante[key] === "object")
  //         self.representante[key] = null;
  //       else if (typeof self.representante[key] === "boolean")
  //         self.representante[key] = false;
  //       else if (typeof self.representante[key] === "number")
  //         self.representante[key] = 0;
  //     });

  //     self.numero_representante = null;
  //     self.esconder_representante = false;
  //     self.representante.notificar_direccion = true;
  //     self.representante.notificar_telefono = true;
  //     self.representante.notificar_email = true;
  //     self.$validator.reset();
  //     self.$validator.reset();
  //   },
  // },

  mounted() {
    $("body").resize();
  },
};
</script>
